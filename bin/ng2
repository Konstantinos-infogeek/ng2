#!/usr/bin/env node

var cli = require('commander');
var path = require('path');
var pkg = require('../package.json');
var version = pkg.version;
var colors = require('colors');
var join = require('path').join;
var fs = require('fs');
var exists = fs.existsSync;
var mkdir = fs.mkdirSync;
var write = fs.writeFileSync;
var utils = require('../lib/utils');
var utils = utils.dumpObjectToFile;
var compile = utils.compileTemplate;

var folder;
if(name === '.' || name === './') {
  name = process.cwd().split('/').pop();
  folder = process.cwd();
  info('using current working directory as app name:', name);
} else {
  folder = join(process.cwd(),name);
  info('using current working directory as app root:', folder);
  if(!exists(folder)) {
    mkdir(folder);
    info('created app root at', folder);
  } else {
    error('app root at', folder, 'not empty!');
  }
}

log('starting app...');
if(!exists(join(folder, 'modules'))) {
  mkdir(join(folder, 'modules'));
  info('created modules folder at', join(folder, 'modules'));
}

write(join(folder,'.gitignore'), 'components\nnode_modules');
info('crafted git ignore at', join(folder, '.gitignore'));

var component = {
  dependencies: {
    "componentizr/angular": "*",
    "componentizr/angular-route": "*"
  },
  remotes: [],
  local: [],
  paths: ["./components", "./modules"]
};

dump(join(folder,'component.json'), component);
info('crafted component.json at', join(folder, 'component.json'));

var templatePath = join(__dirname, 'templates', 'index.html');
var object = {
  app: name
};
write(join(folder, 'index.html'), compile(templatePath, object));
info( 'crafted index.html at ', join(folder, 'index.html'));

var readme = ['# '+name+'\n',
  '> ng2 zero app',
  '',
  '## Install',
  'Do `component install` to get all the components you need.',
  '## Now what?',
  'For help with ng2 run `ng2 help`',
  '## Building',
  'Just do `ng2 build`',
  '## But I want a server!',
  'Just do `ng2 server` then',
  '### This readme is a WIP!'].join(' \n');

write(join(folder, 'README.md'), readme)
info('crafted readme file at', join(folder, 'readme.md'));

log('scaffolded application at ', folder);
log('cd into', name);
log('run `component install` to set everything up');
