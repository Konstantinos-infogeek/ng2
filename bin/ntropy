#!/usr/bin/env node

var cli     = require('commander')
  , path    = require('path')
  , pkg     = require('../package.json')
  , version = pkg.version
  , colors  = require('colors')

var ntropy = require('ntropy')
  , anchorman = require('anchorman');

anchorman.on('log', function  (data) {
  console.log('log: '.blue, data.grey);
});

anchorman.on('error', function  (data) {
  console.log('error: '.red.bold, data.red);
  process.exit(0);
});

anchorman.on('info', function  (data) {
  if(cli.verbose) {
    console.log('info: '.magenta, data.grey);
  }
});

console.log('ntropy'.cyan.bold, 'v'.cyan+version.toString().cyan);

ntropy.reporter = anchorman;
ntropy.bootstrap();

cli
  .version(version)
  .option('-v, --verbose', 'verbose mode')

cli
  .command('module <username/name>')
  .description('\t\tscaffold a module'.grey)
  .action(function (name) {
    ntropy.module(name);
  });

cli
  .command('controller <name>')
  .description('\t\tscaffold a controller'.grey)
  .action(function (name) {
    ntropy.scaffold('controller',name);
  });

cli
  .command('directive <name>')
  .description('\t\tscaffold a directive'.grey)
  .action(function (name) {
    ntropy.scaffold('directive',name);
  });

cli
  .command('filter <name>')
  .description('\t\tscaffold a filter'.grey)
  .action(function (name) {
    ntropy.scaffold('filter',name);
  });

cli
  .command('provider <name>')
  .description('\t\tscaffold a provider'.grey)
  .action(function (name) {
    ntropy.scaffold('provider',name);
  });

cli
  .command('service <name>')
  .description('\t\tscaffold a service'.grey)
  .action(function (name) {
    ntropy.scaffold('service',name);
  });

cli
  .command('test <type> <name>')
  .description('\t\tscaffold a test'.grey)
  .action(function (type, name) {
    ntropy.scaffold('test-'+type,name);
  });

cli
  .command('view <name>')
  .description('\t\tscaffold a view'.grey)
  .action(function (name) {
    ntropy.scaffold('view',name);
  });

cli
  .command('resource <name>')
  .description('\t\tscaffold a full resource'.grey)
  .action(function (name) {
    ntropy.scaffold('controller',name+'-list');
    ntropy.scaffold('controller',name+'-detail');
    ntropy.scaffold('controller',name+'-edit');
    ntropy.scaffold('resource',name);
  });

cli
  .command('build')
  .description('\t\tbuild the project'.grey)
  .action(function () {
    ntropy.build();
  })

cli.parse(process.argv);

console.log('ntropy'.cyan.bold, 'OK!'.cyan,'\n');