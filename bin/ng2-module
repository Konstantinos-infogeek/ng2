#!/usr/bin/env node

/**
 *  Module dependencies.
 */

var cli     = require('commander');
var path    = require('path');
var pkg     = require('../package.json');
var version = pkg.version;
var colors  = require('colors');
var utils = require('../lib/utils');
var log = utils.log;
var info = utils.info;
var error = utils.error;
var unique = require('lodash').unique;
var mod = require('../lib/module');

/*
 * cli
 */

cli
  .version(version)
  .option('-v, --verbose', 'verbose mode')
  .option('--owner <name>', 'take the first parameter as the owner')

cli
  .command('*')
  .description('\t\tscaffold modules'.grey)
  .action(function () {
    var args = Array.prototype.slice.call(arguments, 0);
    var opts = args.pop();

    cli.owner && info("Using owner", cli.owner);

    var names = unique(args).map(function (name) {

      info("Validating module name:", name);

      var valid = mod.isValidName(name);
      var owner = cli.owner;

      if(owner && !valid) {
        name = owner+'/'+name;
        info("Not valid! Setting the owner from options:", name);
        return name;
      } else if(valid) {
        info("Valid! Move along...", name);
        return name;
      } else {
        error(name, 'is not a valid module name.');
        error('A valid name would be: josephuno/navbar');

        log("Check the --owner flag to mass set the"
          , "[owner/][module name] for a list of modules");

        log("No module has been created.");

        process.exit(1);
      }
    });

    info("Creating modules:", names);
    names.forEach(mod.create);
    
    log('check `ng2 --help` for help on generators');
  });

cli.parse(process.argv);